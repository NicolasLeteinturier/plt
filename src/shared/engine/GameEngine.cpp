///////////////////////////////////////////////////////////////////////////////////////////////////

// Generated by dia2code
#ifndef ENGINE__GAMEENGINE__H
#define ENGINE__GAMEENGINE__H

#include <memory>
#include <vector>

namespace state {
  class GameState;
};
namespace engine {
  class Command;
}

#include "../state/GameState.h"
#include "Command.h"

namespace engine {

  /// class GameEngine - 
  class GameEngine {
    // Associations
    // Attributes
  public:
    std::shared_ptr<state::GameState> gameState;
    std::vector<std::shared_ptr<Command>> commands;
    // Operations
  public:
    GameEngine ();
    void executeCommands ();
    bool isLegit (std::shared_ptr<Command> command);
    // Setters and Getters
  };

};

#endif
/////////////////////////////////////////////////////////////////////////////////////////////////

using namespace engine;

GameEngine::GameEngine()
{

}

void GameEngine::executeCommands()
{
	if(commands.size()!=0)
	{
		std::shared_ptr<Command> command = commands[0];
		commands.erase(commands.begin());
		if(command->pressedKey == KeyPressed::LEFT_CLICK)
		{
			gameState->GoToNextAction();
		}
	}
	return;
}
